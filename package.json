{
  "name": "iot-device-net",
  "version": "2.0.1",
  "description": "A Simple IoT Device",
  "scripts": {
    "device:leaf": "./cert/device-cert.sh && npm run device",
    "device": "az iot hub device-identity create -d $DEVICE -n $HUB -oyaml",
    "postdevice:x509": "openssl pkcs12 -export -in cert/$DEVICE-cert.pem -inkey cert/$DEVICE-key.pem -out cert/$DEVICE.pfx -password pass:password && rm cert/*.pem",
    "device:x509": "az iot hub device-identity create -d $DEVICE -n $HUB --am x509_thumbprint --output-dir cert -oyaml",
    "prestart": "dotnet build",
    "start": "DEVICE_CONNECTION_STRING=$(az iot hub device-identity show-connection-string --hub-name $HUB --device-id $DEVICE -otsv) dotnet run",
    "monitor": "az iot hub monitor-events --hub-name $HUB --device-id $DEVICE",
    "clean": "rm -f ./cert/*.pem && rm -f ./cert/*.pfx && az iot hub device-identity delete -d $DEVICE -n $HUB -oyaml",
    "docker:build": "docker build -t $REGISTRY_SERVER/iot-device-net:latest .",
    "docker:start": "docker run -it --name $DEVICE --mount source=$(pwd)/cert,target=/usr/src/app/cert,type=bind -e PROTOCOL=$PROTOCOL -e EDGE_GATEWAY=$EDGE_GATEWAY -e APPINSIGHTS_INSTRUMENTATIONKEY=$APPINSIGHTS_INSTRUMENTATIONKEY -e DEVICE_CONNECTION_STRING=$(az iot hub device-identity show-connection-string --hub-name $HUB --device-id $DEVICE -otsv) $REGISTRY_SERVER/iot-device-net:latest",
    "docker:stop": "docker rm -f $DEVICE",
    "docker": "npm run docker:build && npm run docker:start"
  },
  "author": "",
  "license": "MIT"
}
